name: Publish Python Package

on:
  pull_request:
    types:
      - closed

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment and install dependencies
        run: |
          source .venv/bin/activate
          poetry install
      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run python -m unittest
        
  publish:
    if: github.event.pull_request.merged == true
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
            python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment and install dependencies
        run: |
          source .venv/bin/activate
          poetry install --no-dev
      - name: Build package
        run: |
          source .venv/bin/activate
          poetry build
      - name: Publish to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          source .venv/bin/activate
          poetry publish --build --username __token__ --password $PYPI_API_TOKEN
