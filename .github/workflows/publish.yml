name: Publish Python Package

on:
  # trigger on:
  #  - completed PR to main (only test)
  #  - direct code push to the main branch (only test)
  #  - version tag push
  #  - manual trigger
  pull_request:
    types:
      - closed
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment and install dependencies
        run: |
          source .venv/bin/activate
          poetry install
      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run python -m unittest
      - name: Code formatting check
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "./src"
        
  publish:
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
            python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Create virtual environment
        run: python -m venv .venv
      - name: Activate virtual environment and install dependencies
        run: |
          source .venv/bin/activate
          poetry install --no-dev
      - name: Build and publish to PyPI
        uses: JRubics/poetry-publish@v2.0
        with:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
          repository_name: "testpypi"
          poetry_install_options: '--without dev'
